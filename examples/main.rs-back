#![feature(macro_metavar_expr)]
#![feature(trace_macros)]

// macro_rules! print_expr {
//     ($($expression:tt)*) => {
//         stringify!($($expression)*);
//     };
// }

macro_rules! make_struct {
    (
        $(#[$attr:meta])*
        $struct_vis:vis $(<$($struct_vis_lifetime:lifetime),+>)*
        struct $struct_name:ident
        $(<$($struct_lifetime:lifetime),+>)*
        {
            $($tt:tt)*
        }
    ) => {
        $(#[$attr])*
        $struct_vis $(<$($struct_vis_lifetime),+>)*
        struct $struct_name
        $(<$($struct_lifetime:lifetime),+>)*
        {
            make_struct!(@fn_pointer $($tt)*);
        }
        
        impl $struct_name {
            // print_expr!($($tt)*);
            // make_struct!(@fn_pointer_2 $($tt)*);
            make_struct!(@fn_declare $($tt)*);
        }
    };
    (@fn_pointer
        $(
            $(#[$attr:meta])*
            $vis:vis $(<$($vis_lifetime:lifetime),+>)*
            fn $fnname:ident
            $(<$($fn_lifetime:lifetime),+>)*
            ($($argname:ident : $argtype:ty),* $(,)?)
            $(-> $(<$($returntype_lifetime:lifetime),+>)* $returntype:ty)? ;
        )*
    ) => {
        $(
            $fnname: fn( $($argtype),*)
            $(-> $(<$($returntype_lifetime),+>)* $returntype)?,
        )*
    };
    (@fn_pointer_print
        $(
            $(#[$attr:meta])*
            $vis:vis $(<$($vis_lifetime:lifetime),+>)*
            fn $fnname:ident
            $(<$($fn_lifetime:lifetime),+>)*
            ($($argname:ident : $argtype:ty),* $(,)?)
            $(-> $(<$($returntype_lifetime:lifetime),+>)* $returntype:ty)? ;
        )*
    ) => {
        stringify!(
            $(
                $fnname: fn( $($argtype),*)
                $(-> $(<$($returntype_lifetime),+>)* $returntype)?
            ),*
        );
    };
	(@fn_declare
	    $(
            $(#[$attr:meta])*
            $vis:vis $(<$($vis_lifetime:lifetime),+>)*
            fn $fnname:ident
            $(<$($fn_lifetime:lifetime),+>)*
            ($($argname:ident : $argtype:ty),* $(,)?)
            $(-> $(<$($returntype_lifetime:lifetime),+>)* $returntype:ty)? ;
	    )*
	) => {
	    $(
    	    $(#[$attr])*
    	    $vis $(<$($vis_lifetime),+>)*
    		fn $fnname(&self, $($argname: $argtype),*)
    		$(-> $(<$($returntype_lifetime),+>)* $returntype)?
    		{
                (self.$fnname)($($argname),*)
            }
	    )*
	}
}


fn main() {
    make_struct!(
        pub struct My {
            pub fn go(my: u8);
            pub fn le();
        }
    );

    // make_struct!(
    //     @fn_pointer
    //         pub fn go(my: u8);
    //         pub fn le();
    // );
}